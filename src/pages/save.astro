---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";

const url = Astro.url.searchParams.get('url')
const websocket = import.meta.env.WEBSOCKET
const sitekey = import.meta.env.SITEKEY
---

<Layout
	title="Save Video | PreserveTube"
	description="PreserveTube is a time capsule for YouTube videos! It allows you to preserve any YouTube video, creating a snapshot that will always be available even if the original video disappears or is taken down."
	keywords="save video preservetube, archive video, save youtube video"
>
	<main>
		<Header />
        
        <div id="logs" class="logs">
            <h1 id="title"></h1>
            <div class="h-captcha" id="h-captcha" data-callback="captchaCallback" data-sitekey={sitekey}></div>
            <h3 id="bottom"></h3>
        </div>
	</main>

    <script src="https://js.hcaptcha.com/1/api.js" async defer></script>
    <script define:vars={{ url, websocket }}>
        const ws = new WebSocket(`${websocket}/save?url=${encodeURIComponent(url)}`)
        const h1 = document.getElementById("title")
        const h3 = document.getElementById("bottom")
        const captcha = document.getElementById("h-captcha")

        window.captchaCallback = function(response) {
            captcha.remove()
            ws.send(response)
        }

        ws.onmessage = function (msg) {
            const text = msg.data.split(' - ').slice(1).join(' - ')

            if (msg.data == 'ERROR - Missing URL' || msg.data == 'ERROR - Whoops! What is that? That is not a Youtube url.') {
                h1.innerHTML = text
                return
            } else if (msg.data.startsWith('CAPTCHA -')) {
                captcha.style.display = 'block'
            } else if (msg.data.startsWith('DONE -')) {
                window.location.href = text
            }

            h3.innerHTML = `${h1.innerHTML}<br>${h3.innerHTML}`
            h1.innerHTML = text
        }

        ws.onclose = function (event) {
            h3.innerHTML = `Websocket connection was closed: ${event.reason} (${event.code})<br>${h3.innerHTML}`
        } 

        setInterval(() => {
            ws.send('alive')
        }, 2000)
    </script>
</Layout>

<style>
    .logs {
        text-align: center;
    }

    .h-captcha {
        display: none;
    }
</style>